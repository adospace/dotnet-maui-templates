What's new in ver. 1.7.2:
-------------------------
Added the option to configure conditional compilation so that platform source files can be defined anywhere in the project provided they follow a naming convention as mentioned below.

This will allow maintaining related source files in the same place, especially MAUI Handlers.

*.Standard.cs - Files targeting the BCL
*.Android.cs - Files specific to Android
*.iOS.cs - Files shared with both iOS and MacCatalyst
*.MacCatalyst.cs - Files specific to MacCatalyst
*.Tizen.cs - Files specific to Tizen
*.Windows.cs - Files specific to Windows

Parameter name: -cc | --conditional-compilation

Templates have been updated to .NET MAUI GA, stable release version.

Breaking change: To make things easier, All-in-One and Class Library templates parameters for various package inclusion have been updated to Boolean parameter type.

Also check out the newly included project template for creating a Shared Class Library that produces assemblies targeting Xamarin.Forms and .NET MAUI.

With C# Markup, Global usings and Compiler directives, both Xamarin.Forms and .NET MAUI can be targeted from single project.

dotnet new sharedclasslib --name MyApp.UI

In which:

*.forms.cs source files will be specific to Xamarin.Forms
*.maui.cs source files will be specific to .NET MAUI
*.shared.cs / *.logic.cs will be common to both Xamarin.Forms and .NET MAUI

Refer to VijayAnand.Toolkit.Markup NuGet package source made available here https://github.com/egvijayanand/dotnet-maui-toolkit for a sample.

Join me on Developer Thoughts (https://egvijayanand.in/), an exclusive blog for articles on .NET MAUI and Blazor.
